{"version":3,"sources":["main.js"],"names":["buttonBg","$","buttonColor","addColorValue","result","state","color","colorBg","checked","click","setColorValue","slider","animate","orientation","range","max","value","slide","refreshSwatch","change","red","green","blue","hex","rgb2hex","css","hexValue","hex2rgb","buttonset","r","g","b","toString","each","nr","val","length","join","c","bigint","parseInt","split","a","text","slice"],"mappings":"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","file":"../templates/index.min.js","sourcesContent":["const buttonBg = $('#radio2'),\r\n      buttonColor = $('#radio1');\r\n\r\naddColorValue();\r\nresult('127127127');\r\n\r\nbuttonBg.state = {\r\n  color: '',\r\n  colorBg: '',\r\n  checked: \"color\"\r\n};\r\n\r\nbuttonBg.click(() => {\r\n  buttonBg.state.checked = 'background';\r\n  setColorValue(buttonBg.state.colorBg);\r\n});\r\n\r\nbuttonColor.click(() => {\r\n  buttonBg.state.checked = 'color';\r\n  setColorValue(buttonBg.state.color); \r\n});\r\n\r\nfunction addColorValue() {\r\n   $('#red, #green, #blue').slider({\r\n    animate: \"slow\",\r\n    orientation: 'horizontal',\r\n    range: 'min',\r\n    max: 255,\r\n    value: 127,\r\n    slide: refreshSwatch,\r\n    change: refreshSwatch\r\n  });\r\n\r\n  setColorValue();\r\n};\r\n\r\nfunction refreshSwatch() {\r\n  const red = $('#red').slider('value'),\r\n        green = $('#green').slider('value'),\r\n        blue = $('#blue').slider('value'),\r\n        hex = rgb2hex(red, green, blue);\r\n\r\n  if (buttonBg.state.checked === 'background') {\r\n    buttonBg.state.colorBg = hex;\r\n    $('#swatch').css('background-color', '#' + hex);\r\n  } else {\r\n    $('#text').css('color', '#' + hex);\r\n    $('#swatch').css('border', '2px solid #' + hex);\r\n    buttonBg.state.color = hex;\r\n  }\r\n\r\n  result(hex);\r\n};\r\n\r\nfunction setColorValue(hexValue) {\r\n  let value = hex2rgb('#' + hexValue);\r\n\r\n  if (hexValue) {\r\n    $('#red').slider('value', value[0]);\r\n    $('#green').slider('value', value[1]);\r\n    $('#blue').slider('value', value[2]);\r\n   }\r\n};\r\n\r\n$(() => $('#radio').buttonset());\r\n\r\nfunction rgb2hex(r, g, b) {\r\n  var hex = [\r\n    r.toString(16),\r\n    g.toString(16),\r\n    b.toString(16)\r\n  ];\r\n\r\n  $.each(hex, function (nr, val) {\r\n    if (val.length === 1) {\r\n      hex[ nr ] = '0' + val;\r\n    }\r\n  });\r\n\r\n  return hex.join('');\r\n}\r\n\r\nfunction hex2rgb(c) {\r\n  let bigint = parseInt(c.split('#')[1], 16),\r\n      r = (bigint >> 16) & 255,\r\n      g = (bigint >> 8) & 255,\r\n      b = bigint & 255,\r\n      a = [r, g, b];\r\n\r\n  return a;\r\n}\r\n\r\nfunction result(hex) {\r\n  $('#result-green').text($(\"#green\").slider(\"value\"));\r\n  $('#result-blue').text($(\"#blue\").slider(\"value\"));\r\n  $('#result-red').text($(\"#red\").slider(\"value\"));  \r\n  $('#result-rgb').text(hex2rgb('#' + hex).slice(',').join(''));\r\n  $('#result-hex').text('#' + hex);\r\n  $('#result-rgb').css('color', '#' + hex);\r\n  $('#result-hex').css('color', '#' + hex);\r\n};"]}